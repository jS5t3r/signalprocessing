#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\date{}

\usepackage{todonotes}
\bibliographystyle{plain}
\usepackage{fancyhdr}
\fancyhf{}% Clear header footer
\usepackage{listings}
    \usepackage{color}
    \definecolor{hellgelb}{rgb}{1,1,0.85}
    \definecolor{colKeys}{rgb}{0,0,1}
    \definecolor{colIdentifier}{rgb}{0,0,0}
    \definecolor{colComments}{rgb}{1,0,0}
    \definecolor{colString}{rgb}{0,0.5,0}
    \lstset{%
          language=Matlab,%
          float=hbp,%
          basicstyle=\footnotesize\ttfamily,%
          identifierstyle=\color{colIdentifier},%
          keywordstyle=\color{colKeys},%
          stringstyle=\color{colString},%
          commentstyle=\itshape\color{colComments},%
          columns=fixed,
          tabsize=4,%
          %frame=single,%
          extendedchars=true,%
          showspaces=false,%
          showstringspaces=false,%
          numbers=left,%
          numberstyle=\tiny\ttfamily,%
          numbersep=1em,%
          breaklines=true,%
          breakindent=10pt,
          breakautoindent=true,%
          captionpos=t,%
          xleftmargin=1em,%
          xrightmargin=\fboxsep%
    }
\end_preamble
\use_default_options true
\begin_modules
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_author "Peter Lorenz"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\rightmargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Left Header
LORENZ Peter, REICHEL Robert
\begin_inset space \hfill{}
\end_inset

 Assignment 3
\end_layout

\begin_layout Section*
Octave 3.3
\end_layout

\begin_layout Standard
Gegeben ist das System:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename system.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
System
\begin_inset CommandInset label
LatexCommand label
name "fig:System"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei 
\begin_inset Formula $H(z)$
\end_inset

 spricht man von der z-Transformierte der Impulsantwort
\begin_inset Formula $h[n]$
\end_inset

 und 
\begin_inset Formula $z^{-M}$
\end_inset

 ist die Verzögerung um 
\begin_inset Formula $M$
\end_inset

 Samples.
\end_layout

\begin_layout Subsection*
a) Problem: Finde eine Differentialgleichung, die das System beschreibt
 und bestimmen der 
\begin_inset Formula $H_{1}(z)=\frac{Y(z)}{X(z)}$
\end_inset

.
\end_layout

\begin_layout Standard
Nach Umformung von der Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:System"

\end_inset

 erhalten wir folgende Differenzengleichung:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
y[n]=x[n]-h[n-m]
\]

\end_inset


\end_layout

\begin_layout Standard
Die zugehörige Übertragungsfunktion sieht folgendermaßen aus:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
H_{1}(z) & =\frac{Y(z)}{X(z)}\\
Y(z) & =X(z)-H(z)z^{-M}Y(z)\\
Y(z)\left(H(z)z^{-M}+1\right) & =X(z)\\
H_{1}(z) & =\frac{Y(z)}{X(z)}=\frac{1}{1+H(z)z^{-M}}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $H_{1}(z)$
\end_inset

 werden wir bei späteren Berechnungen brauchen.
 
\end_layout

\begin_layout Subsection*
b) Problem: Eine Audiodatei einlesen und den Absolutbetrag plotten.
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

[x, fs] = audioread('Data/sample1.wav'); 
\end_layout

\begin_layout Plain Layout

N = length(x); 
\end_layout

\begin_layout Plain Layout
\noindent

f = (0:(N-1))*fs/N;
\end_layout

\begin_layout Plain Layout

xdft = fft(x); 
\end_layout

\begin_layout Plain Layout

[~,index] = max(abs(xdft(1:length(x)/2+1)));
\end_layout

\begin_layout Plain Layout

freq = 0:(fs/length(x)):fs/2;
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Berechnung des Frequenzvektors
\begin_inset CommandInset label
LatexCommand label
name "alg:Berechnung-des-Frequenzvektors"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wir haben ein rein reelwertiges Signal, dadurch wissen wir dass das DFT
 Spektrum symmetrisch wird.
 Bei max() brauchen wir nur die Hälfte des Spektrum betrachten müssen, weil
 es eben symmetrisch ist, um das Maximum zu finden.
 Mit den Index bestimme ich beim Plot die Frequenz, wo sie nicht 
\begin_inset Formula $0$
\end_inset

 ist, sondern das Maximum (also wo die Amplitute max ist).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33b.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Grundfrequenz 
\begin_inset Formula $f_{0}$
\end_inset

 des zugrunde liegenden Signals - Absolutbetrag von xdft
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
c) Problem: Plot der ersten Periode des Signals 
\begin_inset Formula $x[n]$
\end_inset


\end_layout

\begin_layout Standard
Es soll ein Vektor 
\series bold

\begin_inset Formula $x_{1}$
\end_inset

 
\series default
erstellt werden, der die erste Periode der Länge 
\begin_inset Formula $T_{0}$
\end_inset

 des Signals 
\begin_inset Formula $x[n]$
\end_inset

 enthält.
 In Punkt a wurde die Grundfrequenz 
\begin_inset Formula $f_{0}=640$
\end_inset

 ermittelt.
 Mit dieser kann die Periodendauer 
\begin_inset Formula $T_{0}$
\end_inset

 ermittelt werden:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T_{0}=\frac{1}{f_{0}}
\]

\end_inset


\end_layout

\begin_layout Standard
Jetzt wissen wir nur die Periodendauer 
\begin_inset Formula $T_{0}$
\end_inset

, aber nicht wieviele Samples dabei sein sollen.
 Dazu muss die Samplefrequenz mit der größten Amplitude dividiert werden.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
samples=\frac{f_{s}}{f[index]}=25\label{eq:samples}
\end{equation}

\end_inset


\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

T_0 = 1/f(index); 
\end_layout

\begin_layout Plain Layout

cnt_samples = fs / f(index);
\end_layout

\begin_layout Plain Layout

fig = figure(201); 
\end_layout

\begin_layout Plain Layout

y_axis = (0:1/fs:T_0); 
\end_layout

\begin_layout Plain Layout

x1 = x(1:cnt_samples);
\end_layout

\begin_layout Plain Layout

plot(y_axis(1:cnt_samples), x(1:cnt_samples)); 
\end_layout

\begin_layout Plain Layout

title('Signal x1'); 
\end_layout

\begin_layout Plain Layout

ylabel('x1[n]'); 
\end_layout

\begin_layout Plain Layout

xlabel('n');
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Berechnung des Frequenzvektors 
\begin_inset CommandInset label
LatexCommand label
name "alg:Berechnung-des-Frequenzvektors-1"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wie in der Problemstellung erklärt wird die Periodendauer benötigt, jedoch
 die Variable 
\emph on
index
\emph default
 wurde schon früher ermittelt, siehe Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Berechnung-des-Frequenzvektors"

\end_inset

.
 In der 6 Zeile vom Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Berechnung-des-Frequenzvektors-1"

\end_inset

 wird die erste Periode in die Variable 
\begin_inset Formula $x_{1}$
\end_inset

gespeichert, wobei die Formel 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:samples"

\end_inset

 benötigt wurde um auf die Anzahl der Samples zu kommen.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33c.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
1 Periodendauer des Signals 
\begin_inset Formula $x[n]$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
d) Welchen Wert muss 
\begin_inset Formula $\alpha$
\end_inset

 annehmen, dass 
\begin_inset Formula $H_{1}(z)$
\end_inset

 stabil ist?
\end_layout

\begin_layout Standard
Wir wissen aus vorherigen Berechnungen, dass
\end_layout

\begin_layout Itemize
\begin_inset Formula $M=T_{0}\cdot fs=25$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $H(z)=\alpha,\quad\alpha\in\mathbb{C}$
\end_inset


\end_layout

\begin_layout Standard
Was muss 
\begin_inset Formula $\alpha$
\end_inset

 erfüllen, damit 
\begin_inset Formula $H_{1}(z)$
\end_inset

 stabil ist? 
\end_layout

\begin_layout Standard
Wir wissen, dass 
\begin_inset Formula $H_{1}(z)=\frac{1}{1+z^{\text{-}M}\alpha}$
\end_inset

.
\end_layout

\begin_layout Standard
Damit ein System stabil ist, muss der Einheitskreis im ROC sein.
 Das bedeutet, dass alle Pole im Einheitskreis liegen müssen.
 Der Pol von 
\begin_inset Formula $H_{1}(z)$
\end_inset

 errechnet sich durch 
\begin_inset Formula 
\[
1+z^{-M}\cdot\alpha=0
\]

\end_inset


\end_layout

\begin_layout Standard
Wir wissen dass Pole die From von 
\begin_inset Formula $z-z_{0}$
\end_inset

 haben und können die obrigen Term umformen:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
z^{-M}+\frac{1}{\alpha}=0
\]

\end_inset


\end_layout

\begin_layout Standard
Nun muss 
\begin_inset Formula $\alpha$
\end_inset

 so gewählt werden, dass der Betrag des Bruchs 
\begin_inset Formula $\frac{1}{\alpha}<1$
\end_inset

 bleibt, damit die Pole im Einheitskreis bleiben.
 Daraus folgt, dass 
\begin_inset Formula $|\alpha|>1$
\end_inset

 sein muss.
 
\end_layout

\begin_layout Subsection*
e) Problem: KS-algorithm
\end_layout

\begin_layout Standard
Eine Funktion 
\begin_inset Formula $ksalgorithm(x,\alpha,M,Nout)$
\end_inset

 soll in einer eigenen Datei (bei uns heisst sie ksalgorithm.m) erstellt
 werden, der ermöglicht den Klang einer gezupften Saite zu synthesieren.
 
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

function [ y ] = ksalgorithm( x, alpha, M, Nout )
\end_layout

\begin_layout Plain Layout

    x1 = zeros('like',x);     
\end_layout

\begin_layout Plain Layout

	x1(1:M) = x(1:M);     
\end_layout

\begin_layout Plain Layout

	a = [1 zeros(1,M-1) -alpha];     
\end_layout

\begin_layout Plain Layout

	tmp = filter(1,a,x);     
\end_layout

\begin_layout Plain Layout

	for n = M:Nout         
\end_layout

\begin_layout Plain Layout

		x1(n) = x(n) + tmp(n-M+1);     
\end_layout

\begin_layout Plain Layout

	end     
\end_layout

\begin_layout Plain Layout

	y = x1; 
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Berechnung des Frequenzvektors 
\begin_inset CommandInset label
LatexCommand label
name "alg:Berechnung-des-Frequenzvektors-2"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die ersten M Werte werden von x nach ich x1 kopiert, wobei die restlichen
 Wert von x1 
\begin_inset Formula $0$
\end_inset

 sind.
 Die 
\emph on
filter(1, a, x1)
\emph default
 Funktion wird mit der Transferfunktion gestopft.
 Die M ersten Samples bleiben gleich wie beim Original.
 Bei den restlichen Wert von M bis Nout werden immer wiederkehren die filter
 Samples dazuaddiert.
 Anmerkung: Hilfestellung für die Polenaufstellung wurde unter folgenden
 Link: 
\begin_inset CommandInset href
LatexCommand href
name "dsp.stackexchange.com"
target "https://dsp.stackexchange.com/questions/41629/matlab-implementation-of-karplus-strong-algorithm-with-filter-function/41630?noredirect=1#comment79430_41630"

\end_inset

 geholt.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33e.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
KS-Algorithmus mit 
\begin_inset Formula $x_{1}$
\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:KS-Algorithmus-mit"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:KS-Algorithmus-mit"

\end_inset

 ist zu sehen, dass das Signal abklingt, was auch so sein soll, weil 
\begin_inset Formula $\alpha<1$
\end_inset

 ist somit das System stabil.
 
\end_layout

\begin_layout Subsection*
f) Problem: KS-Algorithmus anwenden bei verschieden Verschiebungen M
\end_layout

\begin_layout Standard
Es soll nun bei diesem Problem die Audiodateien gespeichert/abgespielt werden
 und ein Plot erstellt werden.
 M soll folgende Werte annehmen:
\end_layout

\begin_layout Itemize
round(M/2)
\end_layout

\begin_layout Itemize
2M
\end_layout

\begin_layout Standard
Hinweis: Die wav-Dateien sind im selben Ordner wie die Matlabdateien mit
 den Namen 
\emph on
3_3f_25m.wav
\emph default
, 
\emph on
3_3f_13m.wav
\emph default
 und 
\emph on
3_3f_50m.wav
\emph default
 hinterlegt.
\end_layout

\begin_layout Standard
Interpretation der folgenden Dateien: 
\end_layout

\begin_layout Enumerate

\emph on
3_3f_25m.wav: hoher Klang.
 Kurzer Ausklang.
\end_layout

\begin_layout Enumerate

\emph on
3_3f_13m.wav: noch höherer Klang.
 Noch kürzer Ausklang.
 
\end_layout

\begin_layout Enumerate

\emph on
3_3f_50m.wav: tieferer Klang als die anderen beiden, wobei ein längeres ausklinge
n deutlich hörbar ist.
 
\end_layout

\begin_layout Standard
Zusammenfassend lässt sich sagen, dass bei kleinerem M die Frequenz höher
 ist, wobei die Abklingzeit zugleich auch kürzer ist.
 Der KS-Algorithmus belässt die ersten M Samples und die Addition (siehe
 Algorithmus 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:KS-Algorithmus-mit"

\end_inset

) kommt erst nachher zu 
\begin_inset Formula $x[n>M]$
\end_inset

 dazu.
 
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33f.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
KS-Algorithmus bei 
\begin_inset Formula $\left\lceil \frac{M}{2}\right\rceil $
\end_inset

 und 
\begin_inset Formula $2M$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei 
\begin_inset Formula $\left\lceil \frac{M}{2}\right\rceil $
\end_inset

 sind viel weniger Samples gebraucht bis der KS-Algorithmus konvergiert.
 Hingegen, wenn 
\begin_inset Formula $2M$
\end_inset

 verwendet wird, dann braucht er weitaus mehr Samples bis der KS-Algorithmus
 konvergiert.
\end_layout

\begin_layout Subsection*
g) Problem: Wie beeinflusst 
\begin_inset Formula $\alpha$
\end_inset

 das Ausgangssignal?
\end_layout

\begin_layout Standard
Es werden mehrere Subplots erstellt bei verschiedenen 
\emph on

\begin_inset Formula $\alpha=\{0.99,0.5,1.00,1.01\}$
\end_inset

 und danach verglichen.
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

y1 = ksalgorithm(x_input, alpha, 25, Nout); 
\end_layout

\begin_layout Plain Layout

y2 = ksalgorithm(x_input, 0.5  , 25, Nout); 
\end_layout

\begin_layout Plain Layout

y3 = ksalgorithm(x_input, 1    , 25, Nout); 
\end_layout

\begin_layout Plain Layout

y4 = ksalgorithm(x_input, 1.01 , 25, Nout);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ausgangssignale mit verschiedenen 
\begin_inset Formula $\alpha$
\end_inset

 berechnet.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33g.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
KS Algorithmus mit 
\begin_inset Formula $\alpha=\{0.99,0.5,1.00,1.01\}$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei einem 
\begin_inset Formula $|\alpha|>1$
\end_inset

 ist das System Stabil, was man erkennen kann dass die beiden oberen Plots
 gegen Unendlich sich an 
\begin_inset Formula $0$
\end_inset

 nähern.
 Weiters kann gesagt werden je kleiner das 
\begin_inset Formula $\alpha$
\end_inset

, desto schneller klingt es ab.
 Die unteren beiden Plots zeigen das Gegenteil, der dritte Plot oszilliert
 und der vierte Plot divergiert, und somit sind für 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\alpha=1$
\end_inset

 und 
\begin_inset Formula $\alpha=1.01$
\end_inset

 das System instabil.
\end_layout

\begin_layout Subsection*
h) [Bonus] Problem: 
\end_layout

\begin_layout Standard
Es soll ein neuer Vektor 
\begin_inset Formula $x_{2}$
\end_inset

 generiert werden, der die Länge von 
\begin_inset Formula $x_{1}$
\end_inset

 besitzt, jedoch mit random Werte befüllt wurde.
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

y_normal = ksalgorithm(x1, 0.99, 25, Nout); 
\end_layout

\begin_layout Plain Layout

x2 = rand(size(x1)); 
\end_layout

\begin_layout Plain Layout

x2(26:end) = 0; 
\end_layout

\begin_layout Plain Layout

y2 = ksalgorithm(x2, 0.99, 25, Nout);
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Erzeugung von 
\begin_inset Formula $x_{2}$
\end_inset

 und die Ausgangssignale 
\begin_inset Formula $x_{2}$
\end_inset

 und y2 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33h.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Vergleich von 
\begin_inset Formula $x_{1}$
\end_inset

 und 
\begin_inset Formula $x_{2}$
\end_inset

 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei 
\begin_inset Formula $x_{2}$
\end_inset

 ist bei den ersten M samples ein größerer Ausschlag erkennbar, was wohl
 die Werte von der Standardfunktion rand() sind.
 Außerdem sind die Randomwerte nur positiv.
 Der KS-Algorithmus lässt sich davon nicht beeinflussen und konvergiert
 wie bei 
\begin_inset Formula $x_{1}$
\end_inset

.
 
\end_layout

\begin_layout Subsection*
i) [Bonus] Problem: 
\end_layout

\begin_layout Standard
Ein Messdatensatz steht bereit mit den ersten 
\begin_inset Formula $\frac{N_{FFT}}{2}$
\end_inset

 Punkte einer 
\begin_inset Formula $N_{FFT}$
\end_inset

 langen DFT.
 Das ist unser Vektor 
\series bold
X
\series default
.
 Das zugehörige Zeitsignal x[n] soll neben Amplitude, Phase, Realteil, Imaginärt
eil geplotted werden.
\end_layout

\begin_layout Subsubsection*
Durchführung in Matlab
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

X = load('Data/Measurement.mat');
\end_layout

\begin_layout Plain Layout

b = cell2mat(struct2cell(X)); 
\end_layout

\begin_layout Plain Layout

br = reshape(b, [1,2048]); 
\end_layout

\begin_layout Plain Layout

X2 = fliplr(br);
\end_layout

\begin_layout Plain Layout

X = [br X2]; 
\end_layout

\begin_layout Plain Layout

x = ifftreal(X); 
\end_layout

\begin_layout Plain Layout

f = (0:length(X)-1)*100/length(X);  
\end_layout

\begin_layout Plain Layout

phase = radtodeg(angle(X));
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Laden und Vorbereiten der Messdaten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Algorithmus für ifftreal(X) hat vom Formelzettel Seite 2 die Gleichung
 
\begin_inset Formula $X[k]=\sum_{n=0}^{N-1}x[n]e^{-j\frac{2\pi}{N}nk}$
\end_inset

 implementiert.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

function [ x ] = ifftreal( X ) 
\end_layout

\begin_layout Plain Layout

   N = length(X);     
\end_layout

\begin_layout Plain Layout

   tmp = zeros(N,N);     
\end_layout

\begin_layout Plain Layout

   for n = 0:N-1         
\end_layout

\begin_layout Plain Layout

      for k = 0:N-1             
\end_layout

\begin_layout Plain Layout

          tmp(k+1,n+1) = exp(1j*2*pi*n*k/N);         
\end_layout

\begin_layout Plain Layout

      end
\end_layout

\begin_layout Plain Layout

   end
\end_layout

\begin_layout Plain Layout

   x = X * (1/N .* tmp); 
\end_layout

\begin_layout Plain Layout

end
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
ifftreal(X)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33i.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Amplitute, Phase, Realteil und Imaginärteil der 
\begin_inset Formula $N_{FFT}$
\end_inset

-Punkte langen DFT von 
\begin_inset Formula $x[n]$
\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wie verhalten sich Realteil und Imaginärteil (bzw.
 Amplitute und Phase)? 
\begin_inset Note Comment
status open

\begin_layout Plain Layout
Generieren Sie eine Darstellung des Zeitsignals x[n].
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Phase passt so, weil durch den Absolutbetrag Phasenspruenge entstehen.
 Zeiger am Einheitskreis (EK) bewegen sich nur mehr auf der rechter seite
 des EK, da Realteil durch Absolutbetrag positiv bleibt.
 Eigentlich gehen sie auf linker weiter, was einen Phasensprung bewirkt.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename img/33ia.png
	lyxscale 30
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Zeitsignal x[n]
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_body
\end_document
